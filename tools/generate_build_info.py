
TEMPLATE = r"""
#
# do not edit this file, it is generated by {creator}
#

TIMESTAMP = '{timestamp}'
SYSTEM = '{system}'
COMMIT = '{commit}'
STATUS = {status}
USER = '{user}'
PACKAGES = {packages}
"""

if __name__ == '__main__':
    import datetime
    import platform
    import subprocess
    import getpass
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument('-o', '--output', default='build_info.py', help='the output file')
    args = parser.parse_args()

    timestamp = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    aliases = platform.system_alias(platform.system(), platform.release(), platform.version())
    system = '{} {} {}'.format(*aliases)
    commit = ''.join(map(chr, subprocess.check_output(['git', 'rev-parse', 'HEAD']))).strip()
    status = list(filter(None, ''.join(map(chr, subprocess.check_output(['git', 'status', '--porcelain']))).split('\n')))
    user = getpass.getuser()
    packages = list(filter(None, ''.join(map(chr, subprocess.check_output(['pip', 'freeze']))).split('\n')))
    creator = __file__

    info = TEMPLATE.format(
        creator=creator,
        timestamp=timestamp,
        system=system,
        commit=commit,
        status=status,
        user=user,
        packages=packages)

    with open(args.output, 'w', encoding='utf-8') as f:
        f.write(info)

